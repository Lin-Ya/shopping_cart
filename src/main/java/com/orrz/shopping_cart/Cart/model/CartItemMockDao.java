package com.orrz.shopping_cart.Cart.model;import com.orrz.shopping_cart.Product.model.Product;import com.orrz.shopping_cart.User.model.User;import com.orrz.shopping_cart.User.view.UserView;import org.springframework.stereotype.Component;import java.util.ArrayList;import java.util.HashMap;import java.util.List;/** * @Author: Lin_Ya * @Date: 2019-01-31-16:12 * @Version: 1.0 * @Description: MockDao */@Component("CartItemDao")public class CartItemMockDao implements CartItemDao {    private CartItemDao cartItemDao;    private HashMap<Long, CartItem> cartItems = new HashMap<>();    public CartItemMockDao() {    }    public CartItemMockDao(CartItemDao cartItemDao) {        this.cartItemDao = cartItemDao;    }    /**     * 获取单个 购物车条目     *     * @param id     * @return     */    @Override    public CartItem getById(long id) {        if (cartItems.containsKey(id)) {            return cartItems.get(id);        } else {            return null;        }    }    /**     * 返回所有 购物车条目     *     * @return     */    @Override    public List<CartItem> findAll() {        return new ArrayList<>(cartItems.values());    }    /**     * 保存 购物车项     *     * @param cartItem     * @return     */    @Override    public CartItem save(CartItem cartItem) {        // 判断有没有id，如果没有就进行 新建        if (cartItem.getId() < 1L) {            long id = (long) (cartItems.size() + 1);            cartItem.setId(id);            cartItems.put(id, cartItem);            return cartItems.get(id);        } else {            cartItems.put(cartItem.getId(), cartItem);            return cartItems.get(cartItem.getId());        }    }    /**     * 删除操作     *     * @param id     * @return     */    @Override    public Boolean delete(long id) {        if (cartItems.containsKey(id)) {            cartItems.remove(id);            return true;        } else {            return false;        }    }}