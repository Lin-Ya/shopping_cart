package com.orrz.shopping_cart.Cart;import com.orrz.shopping_cart.Cart.model.CartItemDao;import com.orrz.shopping_cart.Cart.model.CartItemMockDao;import com.orrz.shopping_cart.Cart.view.GetCartItemResponse;import com.orrz.shopping_cart.Cart.view.ListCartItemResponse;import com.orrz.shopping_cart.Cart.view.UpdateCartItemRequest;import com.orrz.shopping_cart.Cart.view.UpdateCartItemResponse;import com.orrz.shopping_cart.Cart.view.create.CreateCartItemRequest;import com.orrz.shopping_cart.Cart.view.create.CreateCartItemResponse;import com.orrz.shopping_cart.Product.model.ProductDao;import com.orrz.shopping_cart.Product.model.ProductMockDao;import com.orrz.shopping_cart.User.model.UserDao;import com.orrz.shopping_cart.User.model.UserMockDao;import org.junit.Before;import org.junit.Test;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import static org.junit.Assert.assertEquals;/** * @Author: Lin_Ya * @Date: 2019-02-01-09:50 * @Version: 1.0 * @Description: 购物车测试类 */public class CartItemControllerTest {    private final long EXIST_ID = 1L;    private final long NOT_FOUND_ID = 999L;    private CartItemDao cartItemDao;    private UserDao userDao;    private ProductDao productDao;    private CartController cartController;    private CreateCartItemRequest createCartItemRequest;    private UpdateCartItemRequest updateCartItemRequest;    @Before    public void setUp() {        userDao = new UserMockDao();        productDao = new ProductMockDao();        cartItemDao = new CartItemMockDao();        cartController = new CartController(cartItemDao, userDao, productDao);        createCartItemRequest = new CreateCartItemRequest();        updateCartItemRequest = new UpdateCartItemRequest();    }    /**     * 测试获取 购物车项 成功     */    @Test    public void shouldGetCartItemSuccess() {        ResponseEntity<GetCartItemResponse> response = cartController.getById(EXIST_ID);        assertEquals(HttpStatus.OK, response.getStatusCode());    }    /**     * 测试获取 购物车项 失败     */    @Test    public void shouldGetCartItemFail() {        ResponseEntity<GetCartItemResponse> response = cartController.getById(NOT_FOUND_ID);        assertEquals(HttpStatus.NOT_FOUND, response.getStatusCode());    }    /**     * 获取所有 购物车项 成功     */    @Test    public void shouldGetAllCartItem() {        ResponseEntity<ListCartItemResponse> response = cartController.getAllCartItems();        assertEquals(HttpStatus.OK, response.getStatusCode());    }    /**     * 测试创建 购物车条目 成功     */    @Test    public void shouldCreateCartItemSuccess() {        createCartItemRequest.setUserId(EXIST_ID);        createCartItemRequest.setProductId(EXIST_ID);        createCartItemRequest.setQuantity(1L);        ResponseEntity<CreateCartItemResponse> response = cartController.createCartItem(createCartItemRequest);        assertEquals(HttpStatus.CREATED, response.getStatusCode());        assertEquals(1L, response.getBody().getItem().getQuantity());    }    /**     * 更新 指定Id 的购物车条目的 数量     */    @Test    public void shouldUpdateCartItemSuccess() {        updateCartItemRequest.setQuantity(10L);        ResponseEntity<UpdateCartItemResponse> response = cartController.updateCartItem(EXIST_ID, updateCartItemRequest);        assertEquals(HttpStatus.OK, response.getStatusCode());        assertEquals(10L, response.getBody().getCartItem().getQuantity());    }    /**     * 删除 指定id 的购物车条目     */    @Test    public void shouldDeleteCartItemSuccess() {        ResponseEntity response = cartController.deleteCartItem(EXIST_ID);        assertEquals(HttpStatus.OK, response.getStatusCode());    }}